{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/App.vue?56d8","webpack:///./src/components/TurboEncoder.vue?b9be","webpack:///./src/components/convcode.vue?3414","webpack:///./src/components/trellis.vue?9526","webpack:///./src/decoding/viterbi.js","webpack:///src/components/trellis.vue","webpack:///./src/components/trellis.vue?5aec","webpack:///./src/components/trellis.vue","webpack:///src/components/convcode.vue","webpack:///./src/components/convcode.vue?c40d","webpack:///./src/components/convcode.vue","webpack:///src/components/TurboEncoder.vue","webpack:///./src/components/TurboEncoder.vue?f0ef","webpack:///./src/components/TurboEncoder.vue","webpack:///./src/components/TurboDecoder.vue?dcfd","webpack:///src/components/TurboDecoder.vue","webpack:///./src/components/TurboDecoder.vue?4236","webpack:///./src/components/TurboDecoder.vue","webpack:///./src/components/BinarySymmetricChannel.vue?80c5","webpack:///src/components/BinarySymmetricChannel.vue","webpack:///./src/components/BinarySymmetricChannel.vue?a58c","webpack:///./src/components/BinarySymmetricChannel.vue","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","_m","model","callback","$$v","source","expression","on","set_encoded","flip_probability","encoded","$event","set_received","received","set_decoded","staticRenderFns","$emit","types","type","taptext0","taptext1","_e","_s","boolArrToStr","output","trellis","staticStyle","svgHeight","svgWidth","_l","edge","index","directives","rawName","modifiers","edgeInfo","nodeX","from","nodeY","to","node","nodeInfo","Edge","u","x","addOutgoing","addIncoming","time","toString","JSON","stringify","Node","state","incoming","outgoing","Trellis","nodes","edges","edge_times_set","forEach","times","keys","edge_times","nodes_per_time","time_widths","maximal_width","Math","max","values","offset","timestep","heightstep","props","computed","methods","stateToInt","component","sourcetext","memlenght","ta","tb","console","taps","input","step","mem","bit","stepSysNonRec","stepNonSysNonRec","stepSysRec","terminate","applyTap","tap","stringToBoolArr","barr","getTrellisDict","num","dict","mem_copy","getTrellis","memset","tdict_layer","newmemset","newGetTrellis","forward_edges","nextNodes","watch","new_value","components","convcode","f","v","Number","received_signal","required","validator","valid","pass_through_channel","flip","new_received_signal","decoded","signal","TurboEncoder","TurboDecoder","BinarySymmetricChannel","Vue","config","productionTip","use","BootstrapVue","IconsPlugin","render","h","App","$mount"],"mappings":"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","file":"js/app.595853ec.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/turbocodes/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"col p-5\"},[_c('h1',[_vm._v(\"Turbo Codes\")]),_c('div',{staticClass:\"row mt-5\"},[_vm._m(0),_c('div',{staticClass:\"col\"},[_c('b-form-input',{attrs:{\"placeholder\":\"enter source bits\"},model:{value:(_vm.source),callback:function ($$v) {_vm.source=$$v},expression:\"source\"}})],1)]),_c('div',{staticClass:\"row\"},[_c('TurboEncoder',{attrs:{\"source\":_vm.source},on:{\"encoded\":_vm.set_encoded}}),_c('BinarySymmetricChannel',{attrs:{\"f\":_vm.flip_probability,\"input\":_vm.encoded},on:{\"update:f\":function($event){_vm.flip_probability=$event},\"received\":_vm.set_received}}),_c('TurboDecoder',{attrs:{\"input\":_vm.received,\"f\":_vm.flip_probability},on:{\"decoded\":_vm.set_decoded}})],1)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-2\"},[_c('label',{attrs:{\"for\":\"source\"}},[_vm._v(\"source:\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12 mt-3\"},[_c('b-card',[_c('b-card-header',[_c('h4',[_vm._v(\"Encoder\")])]),_c('b-card-body',[_c('convcode',{attrs:{\"source\":_vm.source},on:{\"encoded\":function (encoded) { return _vm.$emit('encoded', encoded); }}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"row p-2\"},[_vm._m(0),_c('div',{staticClass:\"col\"},[_c('b-form-select',{attrs:{\"id\":\"encoder-type\",\"options\":_vm.types},model:{value:(_vm.type),callback:function ($$v) {_vm.type=$$v},expression:\"type\"}})],1)]),_c('div',{staticClass:\"row p-2\"},[_vm._m(1),_c('div',{staticClass:\"col\"},[_c('b-form-input',{attrs:{\"id\":\"taptext0\",\"placeholder\":\"enter tap bits\"},model:{value:(_vm.taptext0),callback:function ($$v) {_vm.taptext0=$$v},expression:\"taptext0\"}})],1)]),(!(_vm.type === 'sysnonrec'))?_c('div',{staticClass:\"row p-2\"},[_vm._m(2),_c('div',{staticClass:\"col\"},[_c('b-form-input',{attrs:{\"id\":\"taptext1\",\"placeholder\":\"enter tap bits\"},model:{value:(_vm.taptext1),callback:function ($$v) {_vm.taptext1=$$v},expression:\"taptext1\"}})],1)]):_vm._e(),_c('div',{staticClass:\"row p-2\"},[_c('div',{staticClass:\"col-2\"},[(_vm.output)?_c('label',{attrs:{\"for\":\"encoded\"}},[_vm._v(\" Encoded: \")]):_vm._e()]),_c('div',{staticClass:\"col\"},[(_vm.output)?_c('p',{attrs:{\"id\":\"encoded\"}},[_vm._v(_vm._s(_vm.boolArrToStr(_vm.output[0]))+\"  \"+_vm._s(_vm.boolArrToStr(_vm.output[1])))]):_vm._e()])])]),_c('div',{staticClass:\"col-12\"},[_c('trellis',{attrs:{\"trellis\":_vm.trellis}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-2\"},[_c('label',{attrs:{\"for\":\"encoder-type\"}},[_vm._v(\" Code type: \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-2\"},[_c('label',{attrs:{\"for\":\"taptext0\"}},[_vm._v(\" Tap A: \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-2\"},[_c('label',{attrs:{\"for\":\"taptext1\"}},[_vm._v(\" Tap B: \")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col\",staticStyle:{\"max-width\":\"100%\",\"overflow\":\"scroll\"}},[(_vm.trellis)?_c('svg',{attrs:{\"height\":(_vm.svgHeight + \"px\"),\"width\":(_vm.svgWidth + \"px\")}},[_vm._l((_vm.trellis.edges),function(edge,index){return _c('line',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],key:index + 'edge',staticStyle:{\"stroke\":\"rgb(0,0,0)\",\"stroke-width\":\"5\"},attrs:{\"title\":_vm.edgeInfo(edge),\"x1\":_vm.nodeX(edge.from),\"y1\":_vm.nodeY(edge.from),\"x2\":_vm.nodeX(edge.to),\"y2\":_vm.nodeY(edge.to)}})}),_vm._l((_vm.trellis.nodes),function(node,index){return _c('circle',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],key:index + 'node',attrs:{\"title\":_vm.nodeInfo(node),\"cx\":_vm.nodeX(node),\"cy\":_vm.nodeY(node),\"r\":\"10\",\"stroke\":\"black\",\"stroke-width\":\"4\",\"fill\":\"white\"}})})],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export {\n    Edge, Node, Trellis, Interleaver, viterbi, min_sum, sum_product, turboturbo,\n}\n\nclass Edge {\n    constructor(u, x, from, to) {\n        this.u = u // input\n        this.x = x // outputs\n        this.from = from\n        this.to = to\n        this.from.addOutgoing(this)\n        this.to.addIncoming(this)\n    }\n\n    get time() {\n        return this.from.time + '' + this.to.time // I hope js doesn't do wacky shit here\n    }\n\n    toString() {\n        let o = {\n            from: this.from.toString(),\n            to: this.to.toString(),\n            u: this.u,\n            x: this.x\n        }\n        return JSON.stringify(o)\n    }\n\n}\n\nclass Node {\n    constructor(time, state) {\n        this.time = time\n        this.state = state\n        this.incoming = []\n        this.outgoing = []\n    }\n\n    addIncoming(edge) {\n        this.incoming.push(edge)\n    }\n\n    addOutgoing(edge) {\n        this.outgoing.push(edge)\n    }\n\n    toString() {\n        let o = {\n            time: this.time,\n            state: this.state,\n        }\n        return JSON.stringify(o)\n    }\n}\n\nclass Trellis {\n    constructor(nodes, edges) {\n        this.nodes = nodes\n        this.edges = edges\n        let edge_times_set = {} // objects work like hasmaps/hashsets, which is quite useful but also funny\n        this.edges.forEach((edge) => {\n            edge_times_set[edge.time] = null // we don't use the values, only the keys\n        })\n        let times = {}\n        this.nodes.forEach((node) => {\n            times[node.time] = null // we don't use the values, only the keys\n        })\n        this.times = Object.keys(times)\n        this.edge_times = Object.keys(edge_times_set)\n        // determine nodes per time\n        let nodes_per_time = {}\n        // calculate maximal width\n        let time_widths = {}\n        this.times.forEach((time) => {\n            nodes_per_time[time] = []\n            time_widths[time] = 0\n        })\n        this.nodes.forEach((node) => {\n            nodes_per_time[node.time].push(node)\n            time_widths[node.time] += 1\n        })\n        this.nodes_per_time = nodes_per_time\n        this.time_widths = time_widths\n        this.maximal_width = Math.max(...Object.values(time_widths))\n    }\n\n}\n\nclass Interleaver {\n    constructor(mapping) {\n        this.mapping = mapping // defines a dict k1 -> k2 meaning that any dictionary k1 -> v will be interleaved into k2 -> v\n        let reverse_mapping = {}\n        Object.keys(mapping).forEach((k) => {\n            let v = mapping[k]\n            reverse_mapping[v] = k // assumes mapping is a bijection (so keys map to distinct values)\n        })\n        this.reverse_mapping = reverse_mapping\n    }\n\n    interleave_with_map(dict_to_interleave, mapping) {\n        let interleaved = {}\n        Object.keys(dict_to_interleave).forEach((k) => {\n            interleaved[mapping[k]] = dict_to_interleave[k]\n        })\n        return interleaved\n    }\n\n    interleave(dict_to_interleave) {\n        return this.interleave_with_map(dict_to_interleave, this.mapping)\n    }\n\n    deinterleave(dict_to_deinterleave) {\n        return this.interleave_with_map(dict_to_deinterleave, this.reverse_mapping)\n    }\n}\n\n\nfunction log_gamma(edge, llr_prior, y, f) {\n    // f is the flip probability of the Binary Symmetric Channel\n    // calculate prob_edge = p(y | x) * p(u) where p(u) is the prior\n    let u = edge.u\n    u = u > 0 ? 1 : -1 // convert to a {-1, 1} space\n    let log_p_u = -Math.log(1 + Math.exp(llr_prior * -u))\n    let log_p_ygivenx = Math.log(1) // 0\n    Object.keys(y).forEach((l) => {\n        if (y[l] === edge.x[l]) {\n            log_p_ygivenx += Math.log(1 - f)\n        }\n        log_p_ygivenx += Math.log(f)\n    })\n    return log_p_u + log_p_ygivenx\n}\n\nfunction min_sum(nodes, edges, edge_costs) {\n    // calculate minimum sum\n    // assumptions:\n    //  nodes are sorted\n    //  first node cost is 0\n    //  path cost is calculated by summing costs of edges along the path\n    //  total path cost is to be minimized\n    let node_costs = {}\n    let best_paths = {}\n    nodes.forEach((node) => {\n        if (node === nodes[0]) {\n            node_costs[node] = 0\n            best_paths[node] = []\n        } else {\n            let best_edge = node.incoming[0]\n            node.incoming.forEach((edge) => {\n\n                if (edge_costs[edge] + node_costs[edge.from] < edge_costs[best_edge] + node_costs[best_edge.from]) {\n                    best_edge = edge\n                }\n            })\n            node_costs[node] = edge_costs[best_edge] + node_costs[best_edge.from]\n            best_paths[node] = [...best_paths[best_edge.from], best_edge]\n        }\n    })\n    let final_node = nodes[nodes.length - 1]\n    return {min_cost: node_costs[final_node], best_path: best_paths[final_node]}\n}\n\nfunction viterbi(trellis, received_signal, llr_priors, f) {\n    let nodes = trellis.nodes\n    let edges = trellis.edges\n\n    // todo: test this function\n    // f is bit flip probability\n\n    // received_signal should be a dict from edge times to bit values in {0,1}. Edge times are\n    // defined as concatenations of from-node and to-node times\n\n    // llr_priors should be a dict from edge times to a priori LLRs, indicating the\n    // a priori log-likelihood ratio per source bit in the trellis.\n\n    // sort the nodes such that we can iterate through them and determine log probabilities\n    nodes.sort((a, b) => {\n        return a.time === b.time ? a.state > b.state : a.time > b.time // string or number compare\n    })\n    let edge_costs = {}\n    edges.forEach((edge) => {\n        let log_g = log_gamma(edge, llr_priors[edge.time], received_signal[edge.time], f)\n        edge_costs[edge] = -log_g\n    })\n    return min_sum(nodes, edges, edge_costs)\n}\n\n\nfunction sum_product(trellis, received_signal, llr_priors, f) {\n    let nodes = trellis.nodes\n    let edges = trellis.edges\n    // todo: test this function\n    // calculate the a posteriori LLR of input bit values (u) at specific edge times\n\n    // sort nodes by time and state\n    nodes.sort((a, b) => {\n        return a.time === b.time ? a.state > b.state : a.time > b.time // string or number compare\n    })\n\n    let alphas = {}\n    let betas = {}\n    let gammas = {}\n    edges.forEach((edge) => {\n        let log_g = log_gamma(edge, llr_priors[edge.time], received_signal[edge.time], f)\n        gammas[edge] = Math.exp(log_g)\n    })\n    nodes.forEach((node) => {\n        let alpha = 0\n        if (node === nodes[0]) { // starting node\n            alpha = 1\n        } else {\n            node.incoming.forEach((edge) => {\n                alpha += alphas[edge.from] * gammas[edge]\n            })\n        }\n        alphas[node] = alpha\n    })\n    nodes.reverse()\n    nodes.forEach((node) => {\n        let beta = 0\n        if (node === nodes[0]) { // final node\n            beta = 1\n        } else {\n            node.outgoing.forEach((edge) => {\n                beta += betas[edge.to] * gammas[edge]\n            })\n        }\n        betas[node] = beta\n    })\n    let llr_posteriors = {}\n    let edge_times = Object.keys(llr_priors)\n    edge_times.forEach((edge_time) => {\n        // see the course book chapter 25 for definition of r^(t)_n.\n        // here, r[0] denotes r^(0)_{edge_time} and r[1] denotes r^(1)_{edge_time}\n        let r = {0: 0, 1: 0}\n        let edges_in_time = edges.filter((edge) => edge.time === edge_time)\n        edges_in_time.forEach((edge) => {\n            r[edge.u] += alphas[edge.from] * gammas[edge] * betas[edge.to]\n        })\n        llr_posteriors[edge_time] = Math.log(r[0] / r[1])\n    })\n    return llr_posteriors\n}\n\nfunction get_extrinsic_information(llr_posteriors, llr_priors, received_signal, f) {\n    let llr_ext = {}\n    Object.keys(received_signal).forEach((edge_time) => {\n        let y0 = received_signal[edge_time][0]\n        y0 = y0 > 0 ? 1 : -1\n        let channel_reliability_measure = Math.log((1 / 2 + y0 * (1 / 2 - f)) / (1 / 2 - y0 * (1 / 2 - f))) // see notes for why this is an appropriate calculation\n        llr_ext[edge_time] = llr_posteriors[edge_time] - llr_priors[edge_time] - channel_reliability_measure\n    })\n    return llr_ext\n}\n\nfunction turboturbo(trellises, interleaver, received_signal, f) {\n    // turbo decoding\n    // assumes:\n    //  trellises contains two Trellis instances\n    //  interleaver is an instance of Interleaver\n    //  received_signal is a string of received bits\n    let first = trellises[0]\n    let second = trellises[1]\n    let llr_priors = {}\n    let systematic = {}\n    let parity_first = {}\n    let parity_second = {}\n    let edge_times = first.edge_times\n    for (let i = 0; i < edge_times.length; i++) {\n        let edge_time = edge_times[i]\n        systematic[edge_time] = received_signal[i * 3]\n        parity_first = received_signal[i * 3 + 1]\n        parity_second = received_signal[i * 3 + 2]\n    }\n    let systematic_interleaved = interleaver.interleave(systematic)\n    edge_times.forEach((edge_time) => {\n        let unbiased_likelihood_ratio = 1 // neither option is more likely\n        llr_priors[edge_time] = Math.log(unbiased_likelihood_ratio)\n    })\n    // todo: implement a function which interleaves a dictionary with edge times as keys, and a deinterleave function\n    let llr_priors_interleaved = interleaver.interleave(llr_priors)\n    let iteration = 0\n    let max_iterations = 100\n    let stop = false\n    let llr_priors_first = llr_priors\n    let llr_priors_second = llr_priors_interleaved\n    let llr_posteriors = {}\n\n    let received_signal_first = {}\n    let received_signal_second = {}\n    edge_times.forEach((edge_time) => {\n        received_signal_first[edge_time] = [systematic[edge_time], parity_first[edge_time]]\n        received_signal_second[edge_time] = [systematic_interleaved[edge_time], parity_second[edge_time]]\n    })\n    while (!stop) {\n        llr_posteriors[first] = sum_product(first, received_signal_first, llr_priors_first, f)\n        llr_posteriors[second] = sum_product(second, received_signal_second, llr_priors_second, f)\n\n        llr_priors_second = interleaver.interleave(get_extrinsic_information(llr_posteriors[first], llr_priors_first, received_signal_first, f))\n        llr_priors_first = interleaver.deinterleave(get_extrinsic_information(llr_posteriors[second], llr_priors_second, received_signal_second, f))\n\n        iteration += 1\n        stop = iteration >= max_iterations\n    }\n    return llr_posteriors // the second element of posteriors is still interleaved\n}\n","<template>\n  <div class=\"col\" style=\"max-width: 100%; overflow: scroll\">\n    <svg v-if=\"trellis\" :height=\"`${svgHeight}px`\" :width=\"`${svgWidth}px`\">\n      <line v-for=\"(edge, index) in trellis.edges\" :key=\"index + 'edge'\" v-b-tooltip.hover :title=\"edgeInfo(edge)\"  :x1=\"nodeX(edge.from)\" :y1=\"nodeY(edge.from)\" :x2=\"nodeX(edge.to)\" :y2=\"nodeY(edge.to)\" style=\"stroke:rgb(0,0,0);stroke-width:5\" />\n      <circle v-for=\"(node, index) in trellis.nodes\" :key=\"index + 'node'\" v-b-tooltip.hover :title=\"nodeInfo(node)\"  :cx=\"nodeX(node)\" :cy=\"nodeY(node)\" r=\"10\" stroke=\"black\" stroke-width=\"4\" fill=\"white\" />\n    </svg>\n  </div>\n</template>\n\n<script>\n\nimport {Trellis} from \"@/decoding/viterbi\";\n\nexport default {\n    data() {\n      return {\n        offset: 50,\n        timestep: 100,\n        heightstep: 50,\n      }\n    },\n    props: {\n      trellis: Trellis,\n    },\n    computed: {\n      svgHeight() {\n        let total_states = Math.pow(2,this.trellis.nodes[0].state.length)\n        return (total_states - 1) * this.heightstep + 2*this.offset\n      },\n      svgWidth() {\n        let trellis_length = this.trellis.times.length\n        return (trellis_length - 1) * this.timestep + 2*this.offset\n      }\n    },\n    methods: {\n      stateToInt(state){\n        return parseInt(state, 2)\n      },\n      nodeY(node) {\n        // let time = node.time\n        // let nodes_in_time = this.trellis.nodes_per_time[time]\n        // nodes_in_time.sort((a,b) => { return a.state > b.state })\n        // let nodeHeight = nodes_in_time.indexOf(node)\n        let nodeHeight = this.stateToInt(node.state)\n        return this.svgHeight - (nodeHeight * this.heightstep + this.offset)\n      },\n      nodeX(node) {\n        let time = node.time\n        return time * this.timestep + this.offset\n      },\n      edgeInfo(edge) {\n        return `input: ${edge.u}\\noutput: ${edge.x.ta}${edge.x.tb}`\n      },\n      nodeInfo(node) {\n        return `state: ${node.state}\\ntime: ${node.time}`\n      }\n    }\n}\n</script>\n\n<style scoped>\n\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./trellis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./trellis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./trellis.vue?vue&type=template&id=3fccf7c0&scoped=true&\"\nimport script from \"./trellis.vue?vue&type=script&lang=js&\"\nexport * from \"./trellis.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3fccf7c0\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"row p-2\">\n        <div class=\"col-2\"><label for=\"encoder-type\"> Code type: </label></div>\n        <div class=\"col\">\n          <b-form-select id=\"encoder-type\" v-model=\"type\" :options=\"types\"></b-form-select>\n        </div>\n      </div>\n      <div class=\"row p-2\">\n        <div class=\"col-2\"><label for=\"taptext0\"> Tap A: </label></div>\n        <div class=\"col\">\n          <b-form-input id=\"taptext0\" v-model=\"taptext0\" placeholder=\"enter tap bits\"></b-form-input>\n        </div>\n      </div>\n      <div v-if=\"!(type === 'sysnonrec')\" class=\"row p-2\">\n        <div class=\"col-2\"><label for=\"taptext1\"> Tap B: </label></div>\n        <div class=\"col\">\n          <b-form-input id=\"taptext1\" v-model=\"taptext1\"\n                        placeholder=\"enter tap bits\"></b-form-input>\n        </div>\n      </div>\n      <div class=\"row p-2\">\n        <div class=\"col-2\">\n          <label v-if=\"output\" for=\"encoded\"> Encoded: </label>\n        </div>\n        <div class=\"col\">\n          <p v-if=\"output\" id=\"encoded\">{{ boolArrToStr(output[0]) }}&emsp; {{ boolArrToStr(output[1]) }}</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <trellis :trellis=\"trellis\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport trellis from '@/components/trellis'\n\nconst zip = (a, b) => a.map((k, i) => [k, b[i]]);\n\nimport {Edge, Node, Trellis} from \"@/decoding/viterbi\";\n\n\n// todo @ leo: example usage of the above classes. For simplicity in the example, the state represents past inputs\nlet node0 = new Node(0, '0000')\nlet node1 = new Node(1, '0001')\nlet node2 = new Node(1, '0000')\nlet node3 = new Node(2, '0000')\n\nlet nodes = [node0, node1, node2, node3]\n\n\nlet edge01 = new Edge('0', '00', node0, node1)\nlet edge02 = new Edge('1', '11', node0, node2)\nlet edge13 = new Edge('1', '11', node1, node3)\nlet edge23 = new Edge('0', '11', node2, node3)\n\nlet edges = [edge01, edge02, edge13, edge23]\n\n\nexport default {\n  name: 'convcode',\n  props: {\n    source: String,\n  },\n  data() {\n    return {\n      type: \"sysnonrec\",\n      types: [\n        \"sysnonrec\",\n        \"nonsysnonrec\",\n        \"sysrec\"\n      ],\n      taptext0: \"\",\n      taptext1: \"\",\n      received: \"\",\n      flip_probability: 0.05,\n    }\n  },\n  computed: {\n    sourcetext() {\n      return this.source\n    },\n    memlenght: function () {\n      return this.taps ? this.taps[0].length : 0\n    },\n    output: function () {\n      if (this.input && this.taps) {\n        let mem = Array(this.memlenght).fill(0)\n        let ta = Array()\n        let tb = Array()\n        this.input.forEach(bit => {\n          let s = this.step(mem, bit)\n          ta.push(s.ta)\n          tb.push(s.tb)\n        });\n        this.terminate(mem, ta, tb)\n        return [ta, tb]\n      }\n      return null\n    },\n    encoded() {\n      if (this.output) {\n        let result = \"\"\n        console.log(this.output)\n        Object.keys(this.output[0]).forEach((i) => {\n          result += this.output[0][i]\n          result += this.output[1][i]\n        })\n        return result\n      }\n      return null\n    },\n    taps: function () {\n      if (this.taptext0 || this.taptext1) {\n        return ([this.stringToBoolArr(this.taptext0), this.stringToBoolArr(this.taptext1)])\n      } else {\n        return null\n      }\n    },\n    input: function () {\n      return this.sourcetext ? this.stringToBoolArr(this.sourcetext) : null\n    },\n    nodes: function () {\n      return nodes\n    },\n    edges: function () {\n      return edges\n    },\n    trellis: function () {\n      return this.newGetTrellis()\n    }\n\n  },\n  methods: {\n    step(mem, bit) {\n      switch (this.type) {\n        case 'sysnonrec':\n          return this.stepSysNonRec(mem, bit)\n        case 'nonsysnonrec':\n          return this.stepNonSysNonRec(mem, bit)\n        case 'sysrec':\n          return this.stepSysRec(mem, bit)\n      }\n    },\n    stepSysNonRec(mem, bit) {\n      mem.push(bit)\n      mem.shift()\n      return ({ta: bit, tb: this.applyTap(this.taps[0], mem)})\n    },\n    stepNonSysNonRec(mem, bit) {\n      mem.push(bit)\n      mem.shift()\n      return ({ta: this.applyTap(this.taps[0], mem), tb: this.applyTap(this.taps[1], mem)})\n    },\n\n    stepSysRec(mem, bit) {\n      mem.shift()\n      mem.push(this.applyTap(this.taps[0], mem.concat([bit])))\n      return ({ta: bit, mem, tb: this.applyTap(this.taps[1], mem)})\n    },\n    terminate(mem, ta, tb) {\n      for (let i = 0; i < mem.length; i++) {\n        let bit = 0\n        if (this.type == 'sysrec') {\n          let bit = this.applyTap(this.taps[0], mem.slice(1).concat([bit]))\n        }\n        let s = this.step(mem, bit)\n        ta.push(s.ta)\n        tb.push(s.tb)\n      }\n    },\n\n    applyTap(tap, data) {\n      return zip(tap, data).map(a => a[0] & a[1]).reduce((previous, current) => previous + current, 0) % 2\n    },\n\n    stringToBoolArr(s) {\n      return s.split('').map(b => parseInt(b))\n    },\n\n    boolArrToStr(barr) {\n      return barr.map(c => c ? \"1\" : \"0\").join(\"\")\n    },\n    getTrellisDict() {\n      //input:u, output:x\n      let dict = {}\n      for (let i = 0; i < 2 ** this.memlenght; i++) {\n        let num = i\n        let mem = []\n        for (let j = 0; j < this.memlenght; j++) {\n          mem.push((num & 1))\n          num >>= 1\n        }\n        dict[mem] = {}\n        dict[mem].one = {u: 1}\n        dict[mem].zero = {u: 0}\n\n        let mem_copy = mem.slice()\n        dict[mem].zero.x = this.step(mem_copy, 0)\n        dict[mem].zero.nextmem = mem_copy\n\n        mem_copy = mem.slice()\n        dict[mem].one.x = this.step(mem_copy, 1)\n        dict[mem].one.nextmem = mem_copy\n\n      }\n      return dict\n    },\n    getTrellis() {\n      let trellis = []\n      let tdict = this.getTrellisDict()\n      let memset = {}\n      let init = Array(this.memlenght).fill(0)\n      memset[init] = init\n      for (let i = 0; i < this.output[0].length; i++) {\n        let tdict_layer = {}\n        let tdict_copy = JSON.parse(JSON.stringify(tdict))\n        let newmemset = {}\n        Object.values(memset).forEach(element => {\n          tdict_layer[element] = tdict_copy[element]\n          if (i >= this.output[0].length - this.memlenght) {\n            if (tdict_layer[element].one.nextmem.slice(-1)) {\n              delete tdict_layer[element].one\n            } else {\n              delete tdict_layer[element].zero\n            }\n          }\n          if (\"one\" in tdict_layer[element]) {\n            newmemset[tdict_layer[element].one.nextmem] = tdict_layer[element].one.nextmem\n          }\n          if (\"zero\" in tdict_layer[element]) {\n            newmemset[tdict_layer[element].zero.nextmem] = tdict_layer[element].zero.nextmem\n          }\n\n        });\n        memset = newmemset\n        trellis.push(tdict_layer)\n      }\n      console.log(trellis)\n    },\n    newGetTrellis() {\n      if (this.taps && this.output) {\n        let times = []\n        let tdict = this.getTrellisDict()\n        times[0] = [new Node(0, Array(this.memlenght + 1).join(\"0\"))]\n        edges = []\n        for (let i = 0; i < this.output[0].length; i++) {\n          let nextNodes = {}\n          times[i].forEach(node => {\n            let tdict_node = tdict[this.stringToBoolArr(node.state)]\n            let forward_edges = []\n            if (i >= this.output[0].length - this.memlenght) {\n              if (!tdict_node.one.nextmem.slice(-1)[0]) {\n                forward_edges = [tdict_node.one]\n              } else {\n                forward_edges = [tdict_node.zero]\n              }\n            } else {\n              forward_edges = [tdict_node.one, tdict_node.zero]\n            }\n\n            forward_edges.forEach(edge => {\n              if (!(edge.nextmem in nextNodes)) {\n                nextNodes[edge.nextmem] = new Node(i + 1, this.boolArrToStr(edge.nextmem))\n              }\n              edges.push(new Edge(edge.u, edge.x, node, nextNodes[edge.nextmem]))\n            });\n          });\n          times.push(Object.values(nextNodes))\n        }\n        return new Trellis([].concat.apply([], times), edges)\n      }\n      return null\n    },\n  },\n  watch: {\n    encoded(new_value) {\n      this.$emit('encoded', new_value)\n    }\n  },\n  components: {\n    trellis,\n  }\n}\n</script>\n\n<style scoped>\n\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./convcode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./convcode.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./convcode.vue?vue&type=template&id=7b826dfa&scoped=true&\"\nimport script from \"./convcode.vue?vue&type=script&lang=js&\"\nexport * from \"./convcode.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b826dfa\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"col-12 mt-3\">\n    <b-card>\n      <b-card-header>\n        <h4>Encoder</h4>\n      </b-card-header>\n      <b-card-body>\n        <convcode :source=\"source\" @encoded=\"(encoded) => $emit('encoded', encoded)\"/>\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<script>\n//todo: use two convolutional codes\nimport convcode from \"@/components/convcode\";\n\nexport default {\n  name: \"TurboEncoder\",\n  props: {\n    source: String,\n  },\n  components: {\n    convcode,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurboEncoder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurboEncoder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TurboEncoder.vue?vue&type=template&id=277fc0a1&scoped=true&\"\nimport script from \"./TurboEncoder.vue?vue&type=script&lang=js&\"\nexport * from \"./TurboEncoder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"277fc0a1\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-6 mt-3\"},[_c('b-card',[_c('b-card-header',[_c('h4',[_vm._v(\"Decoder\")])]),_c('b-card-body')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"col-6 mt-3\">\n    <b-card>\n      <b-card-header>\n        <h4>Decoder</h4>\n      </b-card-header>\n      <b-card-body></b-card-body>\n    </b-card>\n<!--    <viterbi :trellis=\"trellis\" />-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TurboDecoder\"\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurboDecoder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurboDecoder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TurboDecoder.vue?vue&type=template&id=4cbf8a4e&scoped=true&\"\nimport script from \"./TurboDecoder.vue?vue&type=script&lang=js&\"\nexport * from \"./TurboDecoder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4cbf8a4e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-6 mt-3\"},[_c('b-card',[_c('b-card-header',[_c('h4',[_vm._v(\"Binary Symmetric Channel\")])]),_c('b-card-body',[_c('div',{staticClass:\"m-2\"},[_c('p',{staticClass:\"m-0\"},[_c('label',{attrs:{\"for\":\"range-f\"}},[_vm._v(\"bit flip probability \"+_vm._s(_vm.f))])]),_c('b-form-input',{staticClass:\"mw-100\",attrs:{\"id\":\"range-f\",\"value\":_vm.f,\"type\":\"range\",\"min\":\"0\",\"max\":\"1\",\"step\":\"0.0001\"},on:{\"input\":function (v) {_vm.$emit('update:f', Number(v))}}})],1),_c('p',[_vm._v(\"Transmitted: \"+_vm._s(_vm.input))]),_c('p',[_vm._v(\"Received: \"+_vm._s(_vm.received_signal))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"col-6 mt-3\">\n    <b-card>\n      <b-card-header>\n        <h4>Binary Symmetric Channel</h4>\n      </b-card-header>\n      <b-card-body>\n        <div class=\"m-2\">\n          <p class=\"m-0\"><label for=\"range-f\">bit flip probability {{ f }}</label></p>\n          <b-form-input id=\"range-f\" class=\"mw-100\" :value=\"f\" @input=\"(v) => {$emit('update:f', Number(v))}\" type=\"range\" min=\"0\"\n                        max=\"1\"\n                        step=\"0.0001\"/>\n        </div>\n        <p>Transmitted: {{input}}</p>\n        <p>Received: {{received_signal}}</p>\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BinarySymmetricChannel\",\n  props: {\n    f: { // bit flip probability\n      type: Number,\n      required: true,\n    },\n    input: { // booleans to be transmitted\n      type: String,\n      required: false,\n      validator(t) {\n        let valid = true\n        for (let i = 0; i < t.length; i++) {\n          valid = valid && ['0', '1'].includes(t[i])\n        }\n        return valid\n      }\n    }\n  },\n  methods: {\n    pass_through_channel() {\n      if (this.input) {\n        let input = this.input\n        let result = []\n        input.split('').forEach((input_bit) => {\n          if (Math.random() <= this.f) { // randomly flip bit\n            result.push(this.flip(input_bit))\n          } else {\n            result.push(input_bit)\n          }\n        })\n        return result\n      }\n      return null\n    },\n    flip(bit) {\n      return bit === '0' ? '1' : '0'\n    }\n  },\n  computed: {\n    received_signal() {\n      let received = this.pass_through_channel()\n      if (received) {\n        let result = \"\"\n        received.forEach((bit) => {\n          result += bit\n        })\n        return result\n      }\n      return null\n    }\n  },\n  watch: {\n    received_signal(new_received_signal) {\n      this.$emit('received', new_received_signal)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinarySymmetricChannel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinarySymmetricChannel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BinarySymmetricChannel.vue?vue&type=template&id=51478cc9&scoped=true&\"\nimport script from \"./BinarySymmetricChannel.vue?vue&type=script&lang=js&\"\nexport * from \"./BinarySymmetricChannel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"51478cc9\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <div class=\"col p-5\">\n        <h1>Turbo Codes</h1>\n        <div class=\"row mt-5\">\n          <div class=\"col-2\"><label for=\"source\">source:</label></div>\n          <div class=\"col\">\n            <b-form-input v-model=\"source\" placeholder=\"enter source bits\"></b-form-input>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <TurboEncoder :source=\"source\" @encoded=\"set_encoded\"/>\n          <BinarySymmetricChannel :f.sync=\"flip_probability\" :input=\"encoded\" @received=\"set_received\"/>\n          <TurboDecoder :input=\"received\" :f=\"flip_probability\" @decoded=\"set_decoded\"/>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TurboEncoder from \"@/components/TurboEncoder\";\nimport TurboDecoder from \"@/components/TurboDecoder\";\nimport BinarySymmetricChannel from \"@/components/BinarySymmetricChannel\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      source: \"\",\n      encoded: \"\",\n      received: \"\",\n      decoded: \"\",\n      flip_probability: 0.05,\n    }\n  },\n  methods: {\n    set_received(signal) {\n      this.received = signal\n    },\n    set_encoded(encoded) {\n      this.encoded = encoded\n    },\n    set_decoded(decoded) {\n      this.decoded = decoded\n    }\n  },\n  components: {\n    TurboEncoder,\n    TurboDecoder,\n    BinarySymmetricChannel,\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n}\n\nbody {\n  height: 100vh;\n}\n\n\nlabel{\n  width: 100%;\n  text-align: start;\n}\n</style>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=376cfb31&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\n\nVue.config.productionTip = false\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue)\n// Optionally install the BootstrapVue icon components plugin\nVue.use(IconsPlugin)\n\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}